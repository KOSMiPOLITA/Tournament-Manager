@model PAI_141249.Models.Tournament

@using PAI_141249.Models;

@{
    ViewBag.Title = "Szczegóły turnieju";
}

@{
    var X = Model.MapaGoogleX.ToString().Replace(',', '.');
    var Y = Model.MapaGoogleY.ToString().Replace(',', '.');
}

<style>
    #map {
        height: 400px;
        width: 40%;
    }

    .logo {
        height: 75px;
        margin-top: 10px;
        padding-right: 10px;
    }
</style>

<h2>Szczegóły turnieju</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Nazwa)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Nazwa)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Dyscyplina)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Dyscyplina)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Data)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Data)
        </dd>

        <dt>
            Mapa Lokalizacji
        </dt>

        <dd>
            <div id="map"></div>
            <script>
                let map;
                let XXX = @X;
                let YYY = @Y;
                function initMap() {
                    var myCenter = new google.maps.LatLng(XXX, YYY);
                    var mapProp = { center: myCenter, zoom: 12, scrollwheel: false, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };
                    var map = new google.maps.Map(document.getElementById("map"), mapProp);
                    var marker = new google.maps.Marker({ position: myCenter });
                    marker.setMap(map);
                }
            </script>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBxFGLKmK5ZtAgogx_q-yyPorrH7zw-DLc&callback=initMap&libraries=&v=weekly"
                    async></script>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Limit)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Limit)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Deadline)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Deadline)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Rozstawieni)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Rozstawieni)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Organizator)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Organizator)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Logos)
        </dt>

        <dd>
            @if (Model.Logos != null && Model.Logos != "")
            {
                string[] links = Model.Logos.Split(';');
                foreach (var l in links)
                {
                    <img src="@l" alt="logo" class="logo">
                }
            }
            else
            {
                <p>Dany turniej nie ma w bazie zapisanego żadnego loga sponsora</p>
            }
        </dd>

    </dl>
</div>

@{
    if (Session["user"] != null)
    {
        User uzytkownik = (User)Session["user"];

        if (uzytkownik.Email == Model.Organizator)
        {
    <p>
        @Html.ActionLink("Edytuj", "EditTournament", new { id = Model.IdTurnieju })
        @if (Model.Deadline <= DateTime.Now)
        {
            @Html.ActionLink("Drabinka", "FindTournamentBracket", "Home", new { id = Model.IdTurnieju })
        }
        else
        {
            @Html.ActionLink("Zapisz się", "SingUp", "Home")
        }
        @Html.ActionLink("Powrót", "Index")
    </p>
        }
        else
        {
            <p>
                @if (Model.Deadline <= DateTime.Now) {
                    @Html.ActionLink("Drabinka", "FindTournamentBracket", "Home", new { id = Model.IdTurnieju })
                    }
                else
                    {
                        @Html.ActionLink("Zapisz się", "SingUp", "Home") 
                    }
                @Html.ActionLink("Powrót", "Index")
            </p>
        }

        uzytkownik = null;
    }
    else
    {

        <p>
            @if (Model.Deadline <= DateTime.Now) {
                    @Html.ActionLink("Drabinka", "FindTournamentBracket", "Home", new { id = Model.IdTurnieju })
                    }
            else
                    {
                        @Html.ActionLink("Zapisz się", "SingUp", "Home") 
                    }
             @Html.ActionLink("Powrót", "Index")
        </p>
    }
}


@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/scripts/jquery-3.3.1.min.js"></script>
    <script src="~/scripts/bootstrap.min.js"></script>
    <script src="~/scripts/jquery.validate.min.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
}
